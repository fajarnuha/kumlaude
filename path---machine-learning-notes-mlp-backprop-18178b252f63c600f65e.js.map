{"version":3,"sources":["webpack:///path---machine-learning-notes-mlp-backprop-18178b252f63c600f65e.js","webpack:///./.cache/json/machine-learning-notes-mlp-backprop.json"],"names":["webpackJsonp","712","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","fields","nextTitle","nextSlug","prevTitle","prevSlug","slug","modifiedTime","allDirectory","allFile","pathContext","slugTrim"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,0r7BAA8jxBC,WAAA,EAAAC,QAAA,GAAAC,aAAggNC,MAAA,6CAAAC,MAAA,MAAkEC,QAAWC,UAAA,gCAAAC,SAAA,mDAAAC,UAAA,2BAAAC,SAAA,2BAAAC,KAAA,wCAAAC,aAAA,mBAAuQC,aAAA,KAAAC,QAAA,MAAoCC,aAAgBJ,KAAA,wCAAAK,SAAA","file":"path---machine-learning-notes-mlp-backprop-18178b252f63c600f65e.js","sourcesContent":["webpackJsonp([176701236516018],{\n\n/***/ 712:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># Author: Fajar UN</span>\\n\\n<span class=\\\"token keyword\\\">import</span> pandas <span class=\\\"token keyword\\\">as</span> pd\\n<span class=\\\"token keyword\\\">import</span> numpy <span class=\\\"token keyword\\\">as</span> np\\n<span class=\\\"token keyword\\\">from</span> sklearn<span class=\\\"token punctuation\\\">.</span>model_selection <span class=\\\"token keyword\\\">import</span> KFold\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">sigmoid</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>deriv<span class=\\\"token operator\\\">==</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">-</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">/</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span>np<span class=\\\"token punctuation\\\">.</span>exp<span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Pre Process</span>\\ndf <span class=\\\"token operator\\\">=</span> pd<span class=\\\"token punctuation\\\">.</span>get_dummies<span class=\\\"token punctuation\\\">(</span>pd<span class=\\\"token punctuation\\\">.</span>read_csv<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'iris.csv'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> columns<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'species'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>sample<span class=\\\"token punctuation\\\">(</span>frac<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">#df['bias'] = np.ones((150, ))</span>\\nlabel_cols <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'species_setosa'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'species_versicolor'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'species_virginica'</span><span class=\\\"token punctuation\\\">]</span>\\nfeatures_cols <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'sepal_length'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'sepal_width'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'petal_length'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'petal_width'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token comment\\\"># Binary Encoding</span>\\ny <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\nargmax_label <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>argmax<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>label_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> argmax_label<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">:</span> \\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">elif</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">elif</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\ny <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>array<span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Initialize</span>\\n<span class=\\\"token comment\\\"># Hyper Parameter</span>\\nlearning_rate <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0.01</span><span class=\\\"token punctuation\\\">]</span>\\nbatch_size <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\nepoch <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">501</span>\\nhidden_neuron <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">traintest</span><span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">,</span> learning_rate<span class=\\\"token punctuation\\\">,</span> hidden_neuron<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    \\n    kf <span class=\\\"token operator\\\">=</span> KFold<span class=\\\"token punctuation\\\">(</span>n_splits<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span>\\n    acc <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n    err <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token keyword\\\">for</span> train_index<span class=\\\"token punctuation\\\">,</span> test_index <span class=\\\"token keyword\\\">in</span> kf<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        training_input<span class=\\\"token punctuation\\\">,</span> testing_input <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span>train_index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span>test_index<span class=\\\"token punctuation\\\">]</span>\\n        training_output<span class=\\\"token punctuation\\\">,</span> testing_output <span class=\\\"token operator\\\">=</span> y<span class=\\\"token punctuation\\\">[</span>train_index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">[</span>test_index<span class=\\\"token punctuation\\\">]</span>\\n    \\n        np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>seed<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        w1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">*</span>np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>hidden_neuron<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span>\\n        w2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">*</span>np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>hidden_neuron<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span>\\n        \\n        row_error <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">xrange</span><span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">for</span> j <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">xrange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>training_input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n                l0 <span class=\\\"token operator\\\">=</span> training_input<span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">:</span>j<span class=\\\"token operator\\\">+</span>batch_size<span class=\\\"token punctuation\\\">]</span> \\n                <span class=\\\"token comment\\\">#add biases</span>\\n                l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span>w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token comment\\\">#add biases</span>\\n                l1b <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1b<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                error <span class=\\\"token operator\\\">=</span> training_output<span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">:</span>j<span class=\\\"token operator\\\">+</span>batch_size<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">-</span> l2\\n        \\n                l2_delta <span class=\\\"token operator\\\">=</span> error <span class=\\\"token operator\\\">*</span> sigmoid<span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">,</span> deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n                l1_error <span class=\\\"token operator\\\">=</span> l2_delta<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>w2<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">)</span>\\n                \\n                l1_delta <span class=\\\"token operator\\\">=</span> l1_error <span class=\\\"token operator\\\">*</span> sigmoid<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span>deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n                w2 <span class=\\\"token operator\\\">+=</span> <span class=\\\"token punctuation\\\">(</span>learning_rate <span class=\\\"token operator\\\">*</span> l1b<span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l2_delta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                w1 <span class=\\\"token operator\\\">+=</span> <span class=\\\"token punctuation\\\">(</span>learning_rate <span class=\\\"token operator\\\">*</span> l0<span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1_delta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">if</span> i<span class=\\\"token operator\\\">%</span><span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n                l0 <span class=\\\"token operator\\\">=</span> training_input\\n                l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span>w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                error <span class=\\\"token operator\\\">=</span> training_output <span class=\\\"token operator\\\">-</span> l2\\n                sum_error <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0.5</span><span class=\\\"token operator\\\">*</span>error<span class=\\\"token operator\\\">**</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">#                print 'Error : ' + str(np.mean(sum_error))</span>\\n                row_error<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>mean<span class=\\\"token punctuation\\\">(</span>sum_error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n        err<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>row_error<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token comment\\\"># Testing the network</span>\\n        l0 <span class=\\\"token operator\\\">=</span> testing_input\\n        l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        l1 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n        <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">for</span> j <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">if</span> l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token number\\\">0.5</span> <span class=\\\"token punctuation\\\">:</span> \\n                    l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0.0</span>\\n                <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">:</span> \\n                    l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1.0</span>\\n        <span class=\\\"token keyword\\\">print</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">all</span><span class=\\\"token punctuation\\\">(</span>l2 <span class=\\\"token operator\\\">==</span> testing_output<span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span><span class=\\\"token builtin\\\">float</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>testing_output<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        acc <span class=\\\"token operator\\\">+=</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">all</span><span class=\\\"token punctuation\\\">(</span>l2 <span class=\\\"token operator\\\">==</span> testing_output<span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span><span class=\\\"token builtin\\\">float</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>testing_output<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n    acc_mean <span class=\\\"token operator\\\">=</span> acc<span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">5.0</span>\\n<span class=\\\"token comment\\\">#    print acc_mean</span>\\n    <span class=\\\"token keyword\\\">return</span> acc_mean<span class=\\\"token punctuation\\\">,</span> err\\n\\n\\n<span class=\\\"token keyword\\\">import</span> matplotlib<span class=\\\"token punctuation\\\">.</span>pyplot <span class=\\\"token keyword\\\">as</span> plt\\nres <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">for</span> h <span class=\\\"token keyword\\\">in</span> hidden_neuron<span class=\\\"token punctuation\\\">:</span>\\n    row_result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token keyword\\\">for</span> l <span class=\\\"token keyword\\\">in</span> learning_rate<span class=\\\"token punctuation\\\">:</span>\\n        result<span class=\\\"token punctuation\\\">,</span> err <span class=\\\"token operator\\\">=</span> traintest<span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">,</span> l<span class=\\\"token punctuation\\\">,</span> h<span class=\\\"token punctuation\\\">)</span>\\n        row_result<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">'hidden : '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>h<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'learning rate : '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>l<span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>plot<span class=\\\"token punctuation\\\">(</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">501</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>np<span class=\\\"token punctuation\\\">.</span>mean<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>array<span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>xlabel<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'epoch'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>ylabel<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>show<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    res<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>row_result<span class=\\\"token punctuation\\\">)</span>\\n\\ndf_result <span class=\\\"token operator\\\">=</span> pd<span class=\\\"token punctuation\\\">.</span>DataFrame<span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token operator\\\">=</span>hidden_neuron<span class=\\\"token punctuation\\\">,</span> columns<span class=\\\"token operator\\\">=</span>learning_rate<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"timeToRead\":2,\"excerpt\":\"\",\"frontmatter\":{\"title\":\"Multil Layer Perceptron (Back Propagation)\",\"cover\":null},\"fields\":{\"nextTitle\":\"Singel Layer Perceptron (SGD)\",\"nextSlug\":\"/machine-learning/notes/single-layer-perceptron/\",\"prevTitle\":\"Catatan Machine Learning\",\"prevSlug\":\"/machine-learning/notes/\",\"slug\":\"/machine-learning/notes/mlp-backprop/\",\"modifiedTime\":\"9-6-2018, 1:38\"}},\"allDirectory\":null,\"allFile\":null},\"pathContext\":{\"slug\":\"/machine-learning/notes/mlp-backprop/\",\"slugTrim\":\"machine-learning/notes/mlp-backprop\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---machine-learning-notes-mlp-backprop-18178b252f63c600f65e.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># Author: Fajar UN</span>\\n\\n<span class=\\\"token keyword\\\">import</span> pandas <span class=\\\"token keyword\\\">as</span> pd\\n<span class=\\\"token keyword\\\">import</span> numpy <span class=\\\"token keyword\\\">as</span> np\\n<span class=\\\"token keyword\\\">from</span> sklearn<span class=\\\"token punctuation\\\">.</span>model_selection <span class=\\\"token keyword\\\">import</span> KFold\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">sigmoid</span><span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token punctuation\\\">,</span> deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>deriv<span class=\\\"token operator\\\">==</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>x<span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">-</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">/</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token operator\\\">+</span>np<span class=\\\"token punctuation\\\">.</span>exp<span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span>x<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Pre Process</span>\\ndf <span class=\\\"token operator\\\">=</span> pd<span class=\\\"token punctuation\\\">.</span>get_dummies<span class=\\\"token punctuation\\\">(</span>pd<span class=\\\"token punctuation\\\">.</span>read_csv<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'iris.csv'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> columns<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'species'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>sample<span class=\\\"token punctuation\\\">(</span>frac<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">#df['bias'] = np.ones((150, ))</span>\\nlabel_cols <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'species_setosa'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'species_versicolor'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'species_virginica'</span><span class=\\\"token punctuation\\\">]</span>\\nfeatures_cols <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'sepal_length'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'sepal_width'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'petal_length'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'petal_width'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token comment\\\"># Binary Encoding</span>\\ny <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\nargmax_label <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>argmax<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>label_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> argmax_label<span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span> <span class=\\\"token punctuation\\\">:</span> \\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">elif</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">elif</span> i <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n        y<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n\\ny <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>array<span class=\\\"token punctuation\\\">(</span>y<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># Initialize</span>\\n<span class=\\\"token comment\\\"># Hyper Parameter</span>\\nlearning_rate <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0.01</span><span class=\\\"token punctuation\\\">]</span>\\nbatch_size <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\nepoch <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">501</span>\\nhidden_neuron <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">8</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">traintest</span><span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">,</span> learning_rate<span class=\\\"token punctuation\\\">,</span> hidden_neuron<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    \\n    kf <span class=\\\"token operator\\\">=</span> KFold<span class=\\\"token punctuation\\\">(</span>n_splits<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">)</span>\\n    acc <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n    err <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token keyword\\\">for</span> train_index<span class=\\\"token punctuation\\\">,</span> test_index <span class=\\\"token keyword\\\">in</span> kf<span class=\\\"token punctuation\\\">.</span>split<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        training_input<span class=\\\"token punctuation\\\">,</span> testing_input <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span>train_index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>df<span class=\\\"token punctuation\\\">[</span>features_cols<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>as_matrix<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span>test_index<span class=\\\"token punctuation\\\">]</span>\\n        training_output<span class=\\\"token punctuation\\\">,</span> testing_output <span class=\\\"token operator\\\">=</span> y<span class=\\\"token punctuation\\\">[</span>train_index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">[</span>test_index<span class=\\\"token punctuation\\\">]</span>\\n    \\n        np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>seed<span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        w1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">*</span>np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>hidden_neuron<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span>\\n        w2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">*</span>np<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">.</span>random<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>hidden_neuron<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span>\\n        \\n        row_error <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n        <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">xrange</span><span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">for</span> j <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">xrange</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>training_input<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n                l0 <span class=\\\"token operator\\\">=</span> training_input<span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">:</span>j<span class=\\\"token operator\\\">+</span>batch_size<span class=\\\"token punctuation\\\">]</span> \\n                <span class=\\\"token comment\\\">#add biases</span>\\n                l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span>w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                <span class=\\\"token comment\\\">#add biases</span>\\n                l1b <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1b<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                error <span class=\\\"token operator\\\">=</span> training_output<span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">:</span>j<span class=\\\"token operator\\\">+</span>batch_size<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">-</span> l2\\n        \\n                l2_delta <span class=\\\"token operator\\\">=</span> error <span class=\\\"token operator\\\">*</span> sigmoid<span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">,</span> deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n                l1_error <span class=\\\"token operator\\\">=</span> l2_delta<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>w2<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token punctuation\\\">:</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">)</span>\\n                \\n                l1_delta <span class=\\\"token operator\\\">=</span> l1_error <span class=\\\"token operator\\\">*</span> sigmoid<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span>deriv<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n                w2 <span class=\\\"token operator\\\">+=</span> <span class=\\\"token punctuation\\\">(</span>learning_rate <span class=\\\"token operator\\\">*</span> l1b<span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l2_delta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                w1 <span class=\\\"token operator\\\">+=</span> <span class=\\\"token punctuation\\\">(</span>learning_rate <span class=\\\"token operator\\\">*</span> l0<span class=\\\"token punctuation\\\">.</span>T<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1_delta<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">if</span> i<span class=\\\"token operator\\\">%</span><span class=\\\"token number\\\">10</span> <span class=\\\"token operator\\\">==</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">:</span>\\n                l0 <span class=\\\"token operator\\\">=</span> training_input\\n                l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span>w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                l1 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n                error <span class=\\\"token operator\\\">=</span> training_output <span class=\\\"token operator\\\">-</span> l2\\n                sum_error <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0.5</span><span class=\\\"token operator\\\">*</span>error<span class=\\\"token operator\\\">**</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">#                print 'Error : ' + str(np.mean(sum_error))</span>\\n                row_error<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>mean<span class=\\\"token punctuation\\\">(</span>sum_error<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n        err<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>row_error<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token comment\\\"># Testing the network</span>\\n        l0 <span class=\\\"token operator\\\">=</span> testing_input\\n        l0 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        l1 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l0<span class=\\\"token punctuation\\\">,</span> w1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        l1 <span class=\\\"token operator\\\">=</span> np<span class=\\\"token punctuation\\\">.</span>concatenate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> np<span class=\\\"token punctuation\\\">.</span>ones<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n        l2 <span class=\\\"token operator\\\">=</span> sigmoid<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>dot<span class=\\\"token punctuation\\\">(</span>l1<span class=\\\"token punctuation\\\">,</span> w2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n        <span class=\\\"token keyword\\\">for</span> i <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">for</span> j <span class=\\\"token keyword\\\">in</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n                <span class=\\\"token keyword\\\">if</span> l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">&lt;=</span> <span class=\\\"token number\\\">0.5</span> <span class=\\\"token punctuation\\\">:</span> \\n                    l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0.0</span>\\n                <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">:</span> \\n                    l2<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>j<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1.0</span>\\n        <span class=\\\"token keyword\\\">print</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">all</span><span class=\\\"token punctuation\\\">(</span>l2 <span class=\\\"token operator\\\">==</span> testing_output<span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span><span class=\\\"token builtin\\\">float</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>testing_output<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        acc <span class=\\\"token operator\\\">+=</span> np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">sum</span><span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">all</span><span class=\\\"token punctuation\\\">(</span>l2 <span class=\\\"token operator\\\">==</span> testing_output<span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">/</span><span class=\\\"token builtin\\\">float</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>testing_output<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n        \\n    acc_mean <span class=\\\"token operator\\\">=</span> acc<span class=\\\"token operator\\\">/</span><span class=\\\"token number\\\">5.0</span>\\n<span class=\\\"token comment\\\">#    print acc_mean</span>\\n    <span class=\\\"token keyword\\\">return</span> acc_mean<span class=\\\"token punctuation\\\">,</span> err\\n\\n\\n<span class=\\\"token keyword\\\">import</span> matplotlib<span class=\\\"token punctuation\\\">.</span>pyplot <span class=\\\"token keyword\\\">as</span> plt\\nres <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">for</span> h <span class=\\\"token keyword\\\">in</span> hidden_neuron<span class=\\\"token punctuation\\\">:</span>\\n    row_result <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token keyword\\\">for</span> l <span class=\\\"token keyword\\\">in</span> learning_rate<span class=\\\"token punctuation\\\">:</span>\\n        result<span class=\\\"token punctuation\\\">,</span> err <span class=\\\"token operator\\\">=</span> traintest<span class=\\\"token punctuation\\\">(</span>epoch<span class=\\\"token punctuation\\\">,</span> batch_size<span class=\\\"token punctuation\\\">,</span> l<span class=\\\"token punctuation\\\">,</span> h<span class=\\\"token punctuation\\\">)</span>\\n        row_result<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">print</span> <span class=\\\"token string\\\">'hidden : '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>h<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'learning rate : '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token builtin\\\">str</span><span class=\\\"token punctuation\\\">(</span>l<span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>plot<span class=\\\"token punctuation\\\">(</span> <span class=\\\"token builtin\\\">range</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">501</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>np<span class=\\\"token punctuation\\\">.</span>mean<span class=\\\"token punctuation\\\">(</span>np<span class=\\\"token punctuation\\\">.</span>array<span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> axis<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>xlabel<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'epoch'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>ylabel<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'error'</span><span class=\\\"token punctuation\\\">)</span>\\n        plt<span class=\\\"token punctuation\\\">.</span>show<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    res<span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>row_result<span class=\\\"token punctuation\\\">)</span>\\n\\ndf_result <span class=\\\"token operator\\\">=</span> pd<span class=\\\"token punctuation\\\">.</span>DataFrame<span class=\\\"token punctuation\\\">(</span>res<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token operator\\\">=</span>hidden_neuron<span class=\\\"token punctuation\\\">,</span> columns<span class=\\\"token operator\\\">=</span>learning_rate<span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"timeToRead\":2,\"excerpt\":\"\",\"frontmatter\":{\"title\":\"Multil Layer Perceptron (Back Propagation)\",\"cover\":null},\"fields\":{\"nextTitle\":\"Singel Layer Perceptron (SGD)\",\"nextSlug\":\"/machine-learning/notes/single-layer-perceptron/\",\"prevTitle\":\"Catatan Machine Learning\",\"prevSlug\":\"/machine-learning/notes/\",\"slug\":\"/machine-learning/notes/mlp-backprop/\",\"modifiedTime\":\"9-6-2018, 1:38\"}},\"allDirectory\":null,\"allFile\":null},\"pathContext\":{\"slug\":\"/machine-learning/notes/mlp-backprop/\",\"slugTrim\":\"machine-learning/notes/mlp-backprop\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/machine-learning-notes-mlp-backprop.json\n// module id = 712\n// module chunks = 176701236516018"],"sourceRoot":""}
webpackJsonp([0x6f79b9934931],{715:function(n,s){n.exports={data:{markdownRemark:{html:'<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token comment"># Author: Fajar UN</span>\n\n<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np\n<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt\n<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd\n\nD <span class="token operator">=</span> <span class="token number">4</span>\nK <span class="token operator">=</span> <span class="token number">3</span>\nseed <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>\ndf <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span><span class="token string">\'iris.csv\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sample<span class="token punctuation">(</span>frac<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span>seed<span class="token punctuation">)</span>\nlabel_cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'species_setosa\'</span><span class="token punctuation">,</span> <span class="token string">\'species_versicolor\'</span><span class="token punctuation">,</span> <span class="token string">\'species_virginica\'</span><span class="token punctuation">]</span>\n\n\nsplit_val <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>\nX_train <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'sepal_length\'</span><span class="token punctuation">,</span> <span class="token string">\'sepal_width\'</span><span class="token punctuation">,</span> <span class="token string">\'petal_length\'</span><span class="token punctuation">,</span> <span class="token string">\'petal_width\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span>split_val<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>as_matrix<span class="token punctuation">(</span><span class="token punctuation">)</span>\nX_val <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'sepal_length\'</span><span class="token punctuation">,</span> <span class="token string">\'sepal_width\'</span><span class="token punctuation">,</span> <span class="token string">\'petal_length\'</span><span class="token punctuation">,</span> <span class="token string">\'petal_width\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>split_val<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>as_matrix<span class="token punctuation">(</span><span class="token punctuation">)</span>\ny_train <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">\'species\'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span>split_val<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">\'category\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes\ny_val <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">\'species\'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>split_val<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">\'category\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cat<span class="token punctuation">.</span>codes\n\n<span class="token comment">#Train a Linear Classifier</span>\n\n<span class="token comment"># initialize parameters randomly</span>\n\n<span class="token comment"># initialize parameters randomly</span>\nh <span class="token operator">=</span> <span class="token number">16</span> <span class="token comment"># size of hidden layer</span>\nW <span class="token operator">=</span> <span class="token number">0.01</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>D<span class="token punctuation">,</span>h<span class="token punctuation">)</span>\nb <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span>\nW2 <span class="token operator">=</span> <span class="token number">0.01</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>h<span class="token punctuation">,</span>K<span class="token punctuation">)</span>\nb2 <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>K<span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment"># some hyperparameters</span>\nstep_size <span class="token operator">=</span> <span class="token number">1e</span><span class="token operator">-</span><span class="token number">2</span>\nreg <span class="token operator">=</span> <span class="token number">1e</span><span class="token operator">-</span><span class="token number">3</span> <span class="token comment"># regularization strength</span>\n\n<span class="token comment"># gradient descent loop</span>\nerr_training <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\nerr_validation <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\nnum_examples <span class="token operator">=</span> X_train<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\nnum_val <span class="token operator">=</span> X_val<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n  \n  <span class="token comment"># evaluate class scores, [N x K]</span>\n  hidden_layer <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> W<span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token comment"># note, ReLU activation</span>\n  scores <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">,</span> W2<span class="token punctuation">)</span> <span class="token operator">+</span> b2\n  \n  <span class="token comment"># compute the class probabilities</span>\n  exp_scores <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>scores<span class="token punctuation">)</span>\n  probs <span class="token operator">=</span> exp_scores <span class="token operator">/</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>exp_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># [N x K]</span>\n  \n  <span class="token comment"># compute the loss: average cross-entropy loss and regularization</span>\n  corect_logprobs <span class="token operator">=</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>probs<span class="token punctuation">[</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_examples<span class="token punctuation">)</span><span class="token punctuation">,</span>y_train<span class="token punctuation">]</span><span class="token punctuation">)</span>\n  data_loss <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>corect_logprobs<span class="token punctuation">)</span><span class="token operator">/</span>num_examples\n  reg_loss <span class="token operator">=</span> <span class="token number">0.5</span><span class="token operator">*</span>reg<span class="token operator">*</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>W<span class="token operator">*</span>W<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token operator">*</span>reg<span class="token operator">*</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>W2<span class="token operator">*</span>W2<span class="token punctuation">)</span>\n  loss <span class="token operator">=</span> data_loss <span class="token operator">+</span> reg_loss\n  err_training<span class="token punctuation">.</span>append<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>\n    <span class="token keyword">print</span> <span class="token string">"iteration %d: loss %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> loss<span class="token punctuation">)</span>    \n\n  <span class="token comment"># compute the gradient on scores</span>\n  dscores <span class="token operator">=</span> probs\n  dscores<span class="token punctuation">[</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_examples<span class="token punctuation">)</span><span class="token punctuation">,</span>y_train<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>\n  dscores <span class="token operator">/=</span> num_examples\n  \n  <span class="token comment"># backpropate the gradient to the parameters</span>\n  <span class="token comment"># first backprop into parameters W2 and b2</span>\n  dW2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">.</span>T<span class="token punctuation">,</span> dscores<span class="token punctuation">)</span>\n  db2 <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>dscores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n  <span class="token comment"># next backprop into hidden layer</span>\n  dhidden <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>dscores<span class="token punctuation">,</span> W2<span class="token punctuation">.</span>T<span class="token punctuation">)</span>\n  <span class="token comment"># backprop the ReLU non-linearity</span>\n  dhidden<span class="token punctuation">[</span>hidden_layer <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token comment"># finally into W,b</span>\n  dW <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_train<span class="token punctuation">.</span>T<span class="token punctuation">,</span> dhidden<span class="token punctuation">)</span>\n  db <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>dhidden<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n  \n  <span class="token comment"># add regularization gradient contribution</span>\n  dW2 <span class="token operator">+=</span> reg <span class="token operator">*</span> W2\n  dW <span class="token operator">+=</span> reg <span class="token operator">*</span> W\n  \n  <span class="token comment"># perform a parameter update</span>\n  W <span class="token operator">+=</span> <span class="token operator">-</span>step_size <span class="token operator">*</span> dW\n  b <span class="token operator">+=</span> <span class="token operator">-</span>step_size <span class="token operator">*</span> db\n  W2 <span class="token operator">+=</span> <span class="token operator">-</span>step_size <span class="token operator">*</span> dW2\n  b2 <span class="token operator">+=</span> <span class="token operator">-</span>step_size <span class="token operator">*</span> db2\n  \n  <span class="token comment">#evaluate training loss</span>\n  hidden_layer <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_val<span class="token punctuation">,</span> W<span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span>\n  scores <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">,</span> W2<span class="token punctuation">)</span> <span class="token operator">+</span> b2\n  exp_scores <span class="token operator">=</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span>scores<span class="token punctuation">)</span>\n  probs <span class="token operator">=</span> exp_scores <span class="token operator">/</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>exp_scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> keepdims<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># [N x K]</span>\n  \n  <span class="token comment"># compute the loss: average cross-entropy loss and regularization</span>\n  corect_logprobs <span class="token operator">=</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>log<span class="token punctuation">(</span>probs<span class="token punctuation">[</span><span class="token builtin">range</span><span class="token punctuation">(</span>num_val<span class="token punctuation">)</span><span class="token punctuation">,</span>y_val<span class="token punctuation">]</span><span class="token punctuation">)</span>\n  data_loss <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>corect_logprobs<span class="token punctuation">)</span><span class="token operator">/</span>num_val\n  reg_loss <span class="token operator">=</span> <span class="token number">0.5</span><span class="token operator">*</span>reg<span class="token operator">*</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>W<span class="token operator">*</span>W<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token operator">*</span>reg<span class="token operator">*</span>np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>W2<span class="token operator">*</span>W2<span class="token punctuation">)</span>\n  loss <span class="token operator">=</span> data_loss <span class="token operator">+</span> reg_loss\n  err_validation<span class="token punctuation">.</span>append<span class="token punctuation">(</span>loss<span class="token punctuation">)</span>\n \nplttrain <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>err_training<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">\'training_error\'</span><span class="token punctuation">)</span>\npltval <span class="token operator">=</span> plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>err_validation<span class="token punctuation">,</span> label<span class="token operator">=</span><span class="token string">\'validation_error\'</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>legend<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token string">\'upper right\'</span><span class="token punctuation">)</span>\nplt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment"># evaluate training set accuracy</span>\nhidden_layer <span class="token operator">=</span> np<span class="token punctuation">.</span>maximum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>X_val<span class="token punctuation">,</span> W<span class="token punctuation">)</span> <span class="token operator">+</span> b<span class="token punctuation">)</span>\nscores <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>hidden_layer<span class="token punctuation">,</span> W2<span class="token punctuation">)</span> <span class="token operator">+</span> b2\npredicted_class <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>scores<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token string">\'training accuracy: %.2f\'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>predicted_class <span class="token operator">==</span> y_val<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>',timeToRead:2,excerpt:"",frontmatter:{title:"Softmax Implementation",cover:null},fields:{nextTitle:"UTS Machine Learning",nextSlug:"/machine-learning/uts/",prevTitle:"Softmax with Tensorflow",prevSlug:"/machine-learning/notes/softmax-tf/",slug:"/machine-learning/notes/softmax/",modifiedTime:"9-6-2018, 1:38"}},allDirectory:null,allFile:null},pathContext:{slug:"/machine-learning/notes/softmax/",slugTrim:"machine-learning/notes/softmax"}}}});
//# sourceMappingURL=path---machine-learning-notes-softmax-55d4c1a08d55a7b4658c.js.map